2023-01-27 11:13:52.886 | INFO     | __main__:setup_files:206 - Experiment Name: OFFICIAL_RUN
2023-01-27 11:13:52.887 | INFO     | __main__:main:311 - Command line arguments: Configuration(algorithm='finetuning', dataset='cifar10', classes_per_task=2, seed=2214)
2023-01-27 11:13:52.890 | INFO     | __main__:main:315 - Seeded random to 2214
2023-01-27 11:13:52.891 | INFO     | __main__:main:319 - Got CUDA device
2023-01-27 11:13:52.891 | INFO     | __main__:force_cuda_load:254 - Forcing CUDA initialisation...
2023-01-27 11:13:52.950 | INFO     | __main__:main:323 - CUDA initialised
2023-01-27 11:13:52.951 | INFO     | __main__:setup_shutdown_hook:250 - To access TensorBoard, run the command: tensorboard --logdir=./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN
2023-01-27 11:13:52.953 | INFO     | __main__:main:327 - Setup shutdown hooks
2023-01-27 11:13:53.076 | INFO     | __main__:main:332 - Model is setup
2023-01-27 11:13:53.078 | INFO     | __main__:main:334 - Complete pre-setup, starting experiment
2023-01-27 11:13:54.302 | INFO     | datasets.dataset_base:__init__:80 - Using disjoint tasks with 2 (5 tasks) with a randomised split
2023-01-27 11:13:54.303 | DEBUG    | datasets.dataset_base:_setup_task_datasets:95 - Splitting dataset into 5 disjoint tasks
2023-01-27 11:13:54.324 | INFO     | datasets.dataset_base:__init__:85 - {
  "name": "datasets.cifar10.CIFAR10",
  "dataset_class": "torchvision.datasets.cifar.CIFAR10",
  "training_dataset_parameters": "{'train': True, 'download': True}",
  "testing_dataset_parameters": "{'train': False, 'download': True}",
  "training_transform": "Compose(\n    Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=None)\n    ToTensor()\n    Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.247, 0.2435, 0.2616))\n    RandomCrop(size=(32, 32), padding=4)\n    RandomHorizontalFlip(p=0.5)\n)",
  "testing_transform": "Compose(\n    Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=None)\n    ToTensor()\n    Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.247, 0.2435, 0.2616))\n)",
  "classes": "plane, car, bird, cat, deer, dog, frog, horse, ship, truck",
  "disjoint": true,
  "task_count": 5,
  "classes_per_task": [
    2
  ],
  "task_split_indices": [
    [
      2,
      0
    ],
    [
      6,
      9
    ],
    [
      5,
      8
    ],
    [
      3,
      1
    ],
    [
      7,
      4
    ]
  ],
  "task_split_classes": [
    [
      "bird",
      "plane"
    ],
    [
      "frog",
      "truck"
    ],
    [
      "dog",
      "ship"
    ],
    [
      "cat",
      "car"
    ],
    [
      "horse",
      "deer"
    ]
  ]
}
2023-01-27 11:13:54.328 | DEBUG    | __main__:run_experiment:278 - PID: 15296
2023-01-27 11:13:54.330 | INFO     | __main__:run_experiment:280 - Starting...
2023-01-27 11:13:54.331 | INFO     | algorithms.algorithm_base:train:116 - {
  "name": "algorithms.finetuning.Finetuning",
  "model_class": "models.cifar.resnet.ResNet",
  "device": "cuda:0",
  "dataset_class": "datasets.cifar10.CIFAR10",
  "optimiser_class": "torch.optim.sgd.SGD",
  "loss_criterion_class": "torch.nn.modules.loss.CrossEntropyLoss",
  "max_epochs_per_task": 1,
  "batch_size": 64
}
2023-01-27 11:13:54.333 | DEBUG    | algorithms.algorithm_base:_setup_training:109 - Model moved to cuda:0 and set to train mode
2023-01-27 11:13:54.334 | INFO     | algorithms.algorithm_base:train:118 - Starting training
2023-01-27 11:13:54.335 | INFO     | algorithms.finetuning:train:53 - Task 1 / 5
2023-01-27 11:13:54.336 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['bird', 'plane']
2023-01-27 11:13:54.336 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:14:05.995 | INFO     | algorithms.finetuning:train:83 - 1, loss: 1.765
2023-01-27 11:14:05.997 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 0
2023-01-27 11:14:10.787 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN/task_0_accuracy_results.json
2023-01-27 11:14:10.789 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1597 / 10000 samples (15.97% correct)
2023-01-27 11:14:11.026 | INFO     | algorithms.finetuning:train:53 - Task 2 / 5
2023-01-27 11:14:11.030 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['frog', 'truck']
2023-01-27 11:14:11.030 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:14:19.978 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.371
2023-01-27 11:14:19.980 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 1
2023-01-27 11:14:24.611 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN/task_1_accuracy_results.json
2023-01-27 11:14:24.613 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1818 / 10000 samples (18.18% correct)
2023-01-27 11:14:24.747 | INFO     | algorithms.finetuning:train:53 - Task 3 / 5
2023-01-27 11:14:24.751 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['dog', 'ship']
2023-01-27 11:14:24.752 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:14:33.686 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.633
2023-01-27 11:14:33.687 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 2
2023-01-27 11:14:38.357 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN/task_2_accuracy_results.json
2023-01-27 11:14:38.359 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1827 / 10000 samples (18.27% correct)
2023-01-27 11:14:38.490 | INFO     | algorithms.finetuning:train:53 - Task 4 / 5
2023-01-27 11:14:38.494 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['cat', 'car']
2023-01-27 11:14:38.495 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:14:47.422 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.836
2023-01-27 11:14:47.424 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 3
2023-01-27 11:14:52.053 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN/task_3_accuracy_results.json
2023-01-27 11:14:52.055 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1815 / 10000 samples (18.15% correct)
2023-01-27 11:14:52.186 | INFO     | algorithms.finetuning:train:53 - Task 5 / 5
2023-01-27 11:14:52.189 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['horse', 'deer']
2023-01-27 11:14:52.190 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:15:01.120 | INFO     | algorithms.finetuning:train:83 - 1, loss: 1.067
2023-01-27 11:15:01.122 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 4
2023-01-27 11:15:05.736 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818032.8815699_CIFAR10_OFFICIAL_RUN/task_4_accuracy_results.json
2023-01-27 11:15:05.738 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1485 / 10000 samples (14.85% correct)
2023-01-27 11:15:05.869 | INFO     | algorithms.finetuning:train:92 - Training complete
2023-01-27 11:15:05.873 | INFO     | __main__:run_experiment:286 - Training and evaluation completed!
2023-01-27 11:15:05.874 | INFO     | __main__:run_experiment:300 - Wrote usage stats to file
2023-01-27 11:15:05.875 | INFO     | __main__:main:340 - Complete
2023-01-27 11:15:05.876 | INFO     | __main__:close_tensorboard_writer:248 - Shut down TensorBoard
