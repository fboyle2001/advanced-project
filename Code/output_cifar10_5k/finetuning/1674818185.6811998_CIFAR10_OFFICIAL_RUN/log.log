2023-01-27 11:16:25.685 | INFO     | __main__:setup_files:206 - Experiment Name: OFFICIAL_RUN
2023-01-27 11:16:25.687 | INFO     | __main__:main:311 - Command line arguments: Configuration(algorithm='finetuning', dataset='cifar10', classes_per_task=2, seed=2461)
2023-01-27 11:16:25.688 | INFO     | __main__:main:315 - Seeded random to 2461
2023-01-27 11:16:25.689 | INFO     | __main__:main:319 - Got CUDA device
2023-01-27 11:16:25.690 | INFO     | __main__:force_cuda_load:254 - Forcing CUDA initialisation...
2023-01-27 11:16:25.747 | INFO     | __main__:main:323 - CUDA initialised
2023-01-27 11:16:25.747 | INFO     | __main__:setup_shutdown_hook:250 - To access TensorBoard, run the command: tensorboard --logdir=./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN
2023-01-27 11:16:25.749 | INFO     | __main__:main:327 - Setup shutdown hooks
2023-01-27 11:16:25.870 | INFO     | __main__:main:332 - Model is setup
2023-01-27 11:16:25.872 | INFO     | __main__:main:334 - Complete pre-setup, starting experiment
2023-01-27 11:16:27.041 | INFO     | datasets.dataset_base:__init__:80 - Using disjoint tasks with 2 (5 tasks) with a randomised split
2023-01-27 11:16:27.043 | DEBUG    | datasets.dataset_base:_setup_task_datasets:95 - Splitting dataset into 5 disjoint tasks
2023-01-27 11:16:27.062 | INFO     | datasets.dataset_base:__init__:85 - {
  "name": "datasets.cifar10.CIFAR10",
  "dataset_class": "torchvision.datasets.cifar.CIFAR10",
  "training_dataset_parameters": "{'train': True, 'download': True}",
  "testing_dataset_parameters": "{'train': False, 'download': True}",
  "training_transform": "Compose(\n    Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=None)\n    ToTensor()\n    Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.247, 0.2435, 0.2616))\n    RandomCrop(size=(32, 32), padding=4)\n    RandomHorizontalFlip(p=0.5)\n)",
  "testing_transform": "Compose(\n    Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=None)\n    ToTensor()\n    Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.247, 0.2435, 0.2616))\n)",
  "classes": "plane, car, bird, cat, deer, dog, frog, horse, ship, truck",
  "disjoint": true,
  "task_count": 5,
  "classes_per_task": [
    2
  ],
  "task_split_indices": [
    [
      4,
      7
    ],
    [
      3,
      6
    ],
    [
      1,
      9
    ],
    [
      8,
      2
    ],
    [
      5,
      0
    ]
  ],
  "task_split_classes": [
    [
      "deer",
      "horse"
    ],
    [
      "cat",
      "frog"
    ],
    [
      "car",
      "truck"
    ],
    [
      "ship",
      "bird"
    ],
    [
      "dog",
      "plane"
    ]
  ]
}
2023-01-27 11:16:27.065 | DEBUG    | __main__:run_experiment:278 - PID: 22092
2023-01-27 11:16:27.067 | INFO     | __main__:run_experiment:280 - Starting...
2023-01-27 11:16:27.067 | INFO     | algorithms.algorithm_base:train:116 - {
  "name": "algorithms.finetuning.Finetuning",
  "model_class": "models.cifar.resnet.ResNet",
  "device": "cuda:0",
  "dataset_class": "datasets.cifar10.CIFAR10",
  "optimiser_class": "torch.optim.sgd.SGD",
  "loss_criterion_class": "torch.nn.modules.loss.CrossEntropyLoss",
  "max_epochs_per_task": 1,
  "batch_size": 64
}
2023-01-27 11:16:27.069 | DEBUG    | algorithms.algorithm_base:_setup_training:109 - Model moved to cuda:0 and set to train mode
2023-01-27 11:16:27.070 | INFO     | algorithms.algorithm_base:train:118 - Starting training
2023-01-27 11:16:27.071 | INFO     | algorithms.finetuning:train:53 - Task 1 / 5
2023-01-27 11:16:27.072 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['deer', 'horse']
2023-01-27 11:16:27.072 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:16:38.662 | INFO     | algorithms.finetuning:train:83 - 1, loss: 1.790
2023-01-27 11:16:38.663 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 0
2023-01-27 11:16:43.467 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN/task_0_accuracy_results.json
2023-01-27 11:16:43.468 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1544 / 10000 samples (15.44% correct)
2023-01-27 11:16:43.705 | INFO     | algorithms.finetuning:train:53 - Task 2 / 5
2023-01-27 11:16:43.709 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['cat', 'frog']
2023-01-27 11:16:43.710 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:16:52.614 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.687
2023-01-27 11:16:52.616 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 1
2023-01-27 11:16:57.402 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN/task_1_accuracy_results.json
2023-01-27 11:16:57.403 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1478 / 10000 samples (14.78% correct)
2023-01-27 11:16:57.538 | INFO     | algorithms.finetuning:train:53 - Task 3 / 5
2023-01-27 11:16:57.542 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['car', 'truck']
2023-01-27 11:16:57.543 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:17:06.464 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.928
2023-01-27 11:17:06.465 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 2
2023-01-27 11:17:11.144 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN/task_2_accuracy_results.json
2023-01-27 11:17:11.146 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1155 / 10000 samples (11.55% correct)
2023-01-27 11:17:11.278 | INFO     | algorithms.finetuning:train:53 - Task 4 / 5
2023-01-27 11:17:11.282 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['ship', 'bird']
2023-01-27 11:17:11.283 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:17:20.182 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.692
2023-01-27 11:17:20.184 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 3
2023-01-27 11:17:24.875 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN/task_3_accuracy_results.json
2023-01-27 11:17:24.876 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1549 / 10000 samples (15.49% correct)
2023-01-27 11:17:25.006 | INFO     | algorithms.finetuning:train:53 - Task 5 / 5
2023-01-27 11:17:25.009 | INFO     | algorithms.finetuning:train:54 - Classes in task: ['dog', 'plane']
2023-01-27 11:17:25.010 | INFO     | algorithms.finetuning:train:58 - Starting epoch 1 / 1
2023-01-27 11:17:33.913 | INFO     | algorithms.finetuning:train:83 - 1, loss: 0.758
2023-01-27 11:17:33.915 | INFO     | algorithms.algorithm_base:run_base_task_metrics:144 - Running metrics: Task 4
2023-01-27 11:17:38.587 | DEBUG    | algorithms.algorithm_base:run_base_task_metrics:200 - Raw classification accuracy results saved to ./output_cifar10_5k/finetuning/1674818185.6811998_CIFAR10_OFFICIAL_RUN/task_4_accuracy_results.json
2023-01-27 11:17:38.589 | INFO     | algorithms.algorithm_base:run_base_task_metrics:201 - Correctly classified 1744 / 10000 samples (17.44% correct)
2023-01-27 11:17:38.717 | INFO     | algorithms.finetuning:train:92 - Training complete
2023-01-27 11:17:38.721 | INFO     | __main__:run_experiment:286 - Training and evaluation completed!
2023-01-27 11:17:38.723 | INFO     | __main__:run_experiment:300 - Wrote usage stats to file
2023-01-27 11:17:38.723 | INFO     | __main__:main:340 - Complete
2023-01-27 11:17:38.724 | INFO     | __main__:close_tensorboard_writer:248 - Shut down TensorBoard
